/*
 * SuperMQ Groups Service
 *
 * This is the Groups Server based on the OpenAPI 3.0 specification.  It is the HTTP API for managing platform groups. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupsHierarchyPage {
    /// Level of hierarchy.
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<i32>,
    /// Direction of hierarchy traversal.
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<i32>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<models::Group>>,
}

impl GroupsHierarchyPage {
    pub fn new() -> GroupsHierarchyPage {
        GroupsHierarchyPage {
            level: None,
            direction: None,
            groups: None,
        }
    }
}

