/*
 * SuperMQ Domains Service
 *
 * This is the Domains Server based on the OpenAPI 3.0 specification.  It is the HTTP API for managing platform domains. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendInvitationReqObj {
    /// User unique identifier.
    #[serde(rename = "invitee_user_id")]
    pub invitee_user_id: uuid::Uuid,
    /// Identifier for the role to be assigned to the user.
    #[serde(rename = "role_id")]
    pub role_id: uuid::Uuid,
}

impl SendInvitationReqObj {
    pub fn new(invitee_user_id: uuid::Uuid, role_id: uuid::Uuid) -> SendInvitationReqObj {
        SendInvitationReqObj {
            invitee_user_id,
            role_id,
        }
    }
}

