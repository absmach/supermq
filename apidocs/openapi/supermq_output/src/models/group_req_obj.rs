/*
 * SuperMQ Groups Service
 *
 * This is the Groups Server based on the OpenAPI 3.0 specification.  It is the HTTP API for managing platform groups. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupReqObj {
    /// Free-form group name. Group name is unique on the given hierarchy level.
    #[serde(rename = "name")]
    pub name: String,
    /// Group description, free form text.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Id of parent group, it must be existing group.
    #[serde(rename = "parent_id", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    /// Arbitrary, object-encoded groups's data.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
    /// Group Status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl GroupReqObj {
    pub fn new(name: String) -> GroupReqObj {
        GroupReqObj {
            name,
            description: None,
            parent_id: None,
            metadata: None,
            status: None,
        }
    }
}

