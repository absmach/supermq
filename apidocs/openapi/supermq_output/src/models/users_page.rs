/*
 * SuperMQ Users Service
 *
 * This is the Users Server based on the OpenAPI 3.0 specification.  It is the HTTP API for managing platform users. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersPage {
    #[serde(rename = "users")]
    pub users: Vec<models::User>,
    /// Total number of items.
    #[serde(rename = "total")]
    pub total: i32,
    /// Number of items to skip during retrieval.
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
    /// Maximum number of items to return in one page.
    #[serde(rename = "limit")]
    pub limit: i32,
}

impl UsersPage {
    pub fn new(users: Vec<models::User>, total: i32, limit: i32) -> UsersPage {
        UsersPage {
            users,
            total,
            offset: None,
            limit,
        }
    }
}

