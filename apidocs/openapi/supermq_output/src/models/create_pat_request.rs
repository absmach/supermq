/*
 * SuperMQ Auth Service
 *
 * This is the Auth Server based on the OpenAPI 3.0 specification.  It is the HTTP API for managing platform users. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@abstractmachines.fr
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreatePatRequest {
    /// Name of the Personal Access Token
    #[serde(rename = "name")]
    pub name: String,
    /// Description of the Personal Access Token
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Duration for which the PAT is valid. Format is a duration string (e.g. \"30d\", \"24h\", \"1y\").
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<String>,
}

impl CreatePatRequest {
    pub fn new(name: String) -> CreatePatRequest {
        CreatePatRequest {
            name,
            description: None,
            duration: None,
        }
    }
}

