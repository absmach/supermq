/*
 * SuperMQ Journal Log Service
 *
 * This is the Journal Log Server based on the OpenAPI 3.0 specification.  It is the HTTP API for viewing journal log history. You can now help us improve the API whether it's by making changes to the definition itself or to the code. Some useful links: - [The SuperMQ repository](https://github.com/absmach/supermq) 
 *
 * The version of the OpenAPI document: 0.18.0
 * Contact: info@mainflux.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Journal {
    /// Journal operation.
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<String>,
    /// Time when the journal occurred.
    #[serde(rename = "occurred_at", skip_serializing_if = "Option::is_none")]
    pub occurred_at: Option<String>,
    /// Journal attributes.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<serde_json::Value>,
    /// Journal payload.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
}

impl Journal {
    pub fn new() -> Journal {
        Journal {
            operation: None,
            occurred_at: None,
            attributes: None,
            metadata: None,
        }
    }
}

